{
  "name": "Multiattack Automation 11.4.23",
  "type": "feat",
  "img": "icons/skills/melee/blade-tips-triple-steel.webp",
  "system": {
    "description": {
      "value": "<p>For the lazy GM who finds clicking all of the attack buttons for creatures with multiattacks too tedious.<br /><br />Add the Multiattack Automation feat to your monster and then you can just click multiattack to unleash all of the attacks against a target.<br /><br />I've tested this on a dozen monsters and it seems to work, but there are bound to be cases it gets wrong if so please let me know.</p>",
      "chat": ""
    },
    "source": {
      "custom": "",
      "book": "SRD 5.1",
      "page": "",
      "license": "CC-BY-4.0"
    },
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": "",
      "units": ""
    },
    "cover": null,
    "crewed": false,
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": "",
      "prompt": true
    },
    "range": {
      "value": null,
      "long": null,
      "units": ""
    },
    "uses": {
      "value": null,
      "max": "",
      "per": null,
      "recovery": "",
      "prompt": true
    },
    "consume": {
      "type": "",
      "target": null,
      "amount": null,
      "scale": false
    },
    "ability": null,
    "actionType": "",
    "attackBonus": "",
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "type": {
      "value": "monster",
      "subtype": ""
    },
    "requirements": "",
    "recharge": {
      "value": null,
      "charged": false
    },
    "properties": []
  },
  "effects": [
    {
      "name": "Multiattack Automation",
      "origin": "Scene.VUTmnLQOHLsSo5lF.Token.0QV516zWRJWLOOeG.Actor.iNIPR1veVsbKUuXC.Item.cj8OhgNvNkGybtnT",
      "duration": {
        "rounds": null,
        "startTime": 1699204363,
        "seconds": null,
        "combat": null,
        "turns": null,
        "startRound": null,
        "startTurn": null
      },
      "transfer": true,
      "disabled": false,
      "_id": "uigNxYka2k5vTHIe",
      "changes": [
        {
          "key": "flags.midi-qol.onUseMacroName",
          "mode": 0,
          "value": "ItemMacro, preCompleted",
          "priority": 20
        }
      ],
      "description": "",
      "statuses": [],
      "flags": {
        "times-up": {
          "isPassive": false
        },
        "dae": {
          "disableIncapacitated": false,
          "selfTarget": false,
          "selfTargetAlways": false,
          "dontApply": false,
          "stackable": "noneName",
          "showIcon": false,
          "durationExpression": "",
          "macroRepeat": "none",
          "specialDuration": []
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "nameOverride": "",
          "radius": "",
          "alignment": "",
          "type": "",
          "customCheck": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "displayTemp": false,
          "hostile": false,
          "onlyOnce": false,
          "wallsBlock": "system"
        },
        "core": {
          "sourceId": "Scene.VUTmnLQOHLsSo5lF.Token.IyRV8LwSCk1FiSWh.Actor.K58INTSFII9dCu9i.Item.FXy68z4tsAoyYBv2.ActiveEffect.Eb9vz83kYdtdho2B"
        }
      },
      "tint": "#ffffff",
      "_stats": {
        "coreVersion": "12.327",
        "systemId": null,
        "systemVersion": null,
        "createdTime": null,
        "modifiedTime": null,
        "lastModifiedBy": null,
        "compendiumSource": null,
        "duplicateSource": null
      },
      "img": "icons/skills/melee/blade-tips-triple-steel.webp",
      "type": "base",
      "system": {},
      "sort": 0,
      "_key": "!items.effects!xxxbeu2Ip6YsuBtX.uigNxYka2k5vTHIe"
    }
  ],
  "folder": "HZNnxQwiyl5E1X6W",
  "ownership": {
    "default": 0,
    "STcmc1QZ0hx024Tl": 3
  },
  "flags": {
    "core": {},
    "scene-packer": {
      "hash": "45dea2c013ae9836d482950e8f7ec9cfe4ef9d26"
    },
    "magicitems": {
      "enabled": false,
      "equipped": false,
      "attuned": false,
      "charges": "0",
      "chargeType": "c1",
      "destroy": false,
      "destroyFlavorText": "reaches 0 charges: it crumbles into ashes and is destroyed.",
      "rechargeable": false,
      "recharge": "0",
      "rechargeType": "t1",
      "rechargeUnit": "r1",
      "sorting": "l",
      "default": ""
    },
    "midiProperties": {
      "confirmTargets": "default",
      "autoFailFriendly": false,
      "autoSaveFriendly": false,
      "critOther": false,
      "offHandWeapon": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "noConcentrationCheck": false,
      "toggleEffect": false,
      "ignoreTotalCover": false
    },
    "midi-qol": {
      "rollAttackPerTarget": "default",
      "effectActivation": false,
      "itemCondition": "",
      "reactionCondition": "",
      "otherCondition": "",
      "effectCondition": ""
    },
    "dae": {
      "macro": {
        "name": "Multiattack Automation 11.4.11",
        "img": "icons/skills/melee/blade-tips-triple-steel.webp",
        "type": "script",
        "scope": "global",
        "command": "function pluralToSingular(plural) {\n  // Define common English plural suffixes and their corresponding singular forms\n  const pluralSuffixes = [\n    { suffix: 's', singular: '' },\n    { suffix: 'es', singular: '' },\n    { suffix: 'ies', singular: 'y' },\n  ];\n\n  // Iterate through the suffixes and attempt to remove them from the plural word\n  for (const suffixInfo of pluralSuffixes) {\n    const { suffix, singular } = suffixInfo;\n    if (plural.endsWith(suffix)) {\n      return plural.slice(0, -suffix.length) + singular;\n    }\n  }\n\n  // If no common suffix is found, return the input as is\n  return plural;\n}\nif (rolledItem.name === \"Multiattack\") {\n    let desc = rolledItem.system.description.value;\n    desc = desc.replaceAll(\" one \", \" 1 \");\n    desc = desc.replaceAll(\" once \", \" 1 \");\n    desc = desc.replaceAll(\" two times \", \" 2 \");\n    desc = desc.replaceAll(\" two \", \" 2 \");\n    desc = desc.replaceAll(\" twice \", \" 2 \");\n    desc = desc.replaceAll(\" three times \", \" 3 \");\n    desc = desc.replaceAll(\" three \", \" 3 \");\n    desc = desc.replaceAll(\" thrice \", \" 3 \");\n    desc = desc.replaceAll(\" four times \", \" 4 \")\n    desc = desc.replaceAll(\" four \", \" 4 \");\n    desc = desc.replaceAll(\" five \", \" 5 \");\n    desc = desc.replaceAll(\" five times \", \" 5 \");\n\n\n    matches = desc.matchAll(/(\\d+)\\s+with\\s+its\\s+([^\\d]+)/g)\n    // const regex = /.*(\\d+)\\s*([a-zA-Z]+)\\s*attacks?/;\n    const regex = /.*(\\d+)\\s*(\\b[a-zA-Z]+\\b(?:\\s+\\b[a-zA-Z]+\\b){0,3})\\s*attacks?/i;\n\n    let match = desc.match(regex);\n    if (match) {\n      matches = [[\"\", match[1], match[2]]];\n    }\n    for (let match of matches) {\n        let count = match[1].replace(\",\").trim();\n        let attack = match[2].replace(/,.*/, \"\").replace(\" and \", \"\").trim();\n        attack = attack.charAt(0).toUpperCase() + attack.slice(1);\n        attack = attack.replace(/\\..*/, \"\").replace(/,.*/,\"\");\n        attack = pluralToSingular(attack);\n        let attackItem = actor.items.getName(attack);\n        if (!attackItem) {\n          console.error(\"Could not find item \", attack);\n          continue;\n        }\n        let numericCount = Number(count);\n        for (let i = 0; i < numericCount; i++) {\n          await MidiQOL.completeItemUse(attackItem, {}, {});\n          await new Promise(resolve => setTimeout(resolve, game.settings.get(\"midi-qol\", \"DebounceInterval\")))\n        }\n    }\n\n}\nreturn true;",
        "author": "STcmc1QZ0hx024Tl",
        "ownership": {
          "default": 3
        },
        "_id": null,
        "folder": null,
        "sort": 0,
        "flags": {},
        "_stats": {
          "systemId": null,
          "systemVersion": null,
          "coreVersion": null,
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null
        }
      }
    },
    "itemacro": {
      "macro": {
        "command": "function pluralToSingular(plural) {\n  // Define common English plural suffixes and their corresponding singular forms\n  const pluralSuffixes = [\n    { suffix: 's', singular: '' },\n    { suffix: 'es', singular: '' },\n    { suffix: 'ies', singular: 'y' },\n  ];\n\n  // Iterate through the suffixes and attempt to remove them from the plural word\n  for (const suffixInfo of pluralSuffixes) {\n    const { suffix, singular } = suffixInfo;\n    if (plural.endsWith(suffix)) {\n      return plural.slice(0, -suffix.length) + singular;\n    }\n  }\n\n  // If no common suffix is found, return the input as is\n  return plural;\n}\nif (rolledItem.name === \"Multiattack\") {\n    let desc = rolledItem.system.description.value;\n    desc = desc.replaceAll(\" one \", \" 1 \");\n    desc = desc.replaceAll(\" once \", \" 1 \");\n    desc = desc.replaceAll(\" two times \", \" 2 \");\n    desc = desc.replaceAll(\" two \", \" 2 \");\n    desc = desc.replaceAll(\" twice \", \" 2 \");\n    desc = desc.replaceAll(\" three times \", \" 3 \");\n    desc = desc.replaceAll(\" three \", \" 3 \");\n    desc = desc.replaceAll(\" thrice \", \" 3 \");\n    desc = desc.replaceAll(\" four times \", \" 4 \")\n    desc = desc.replaceAll(\" four \", \" 4 \");\n    desc = desc.replaceAll(\" five \", \" 5 \");\n    desc = desc.replaceAll(\" five times \", \" 5 \");\n\n\n    matches = desc.matchAll(/(\\d+)\\s+with\\s+its\\s+([^\\d]+)/g)\n    const regex = /.*(\\d+)\\s*([a-zA-Z]+)\\s*attacks?/;\n    let match = desc.match(regex);\n    if (match) {\n      matches = [[\"\", match[1], match[2]]];\n    }\n    for (let match of matches) {\n        let count = match[1].replace(\",\").trim();\n        let attack = match[2].replace(/,.*/, \"\").replace(\" and \", \"\").trim();\n        attack = attack.charAt(0).toUpperCase() + attack.slice(1);\n        attack = attack.replace(/\\..*/, \"\").replace(/,.*/,\"\");\n        attack = pluralToSingular(attack);\n        let attackItem = actor.items.getName(attack);\n        if (!attackItem) {\n          console.error(\"Could not find item \", attack);\n          continue;\n        }\n        let numericCount = Number(count);\n        for (let i = 0; i < numericCount; i++) {\n          await MidiQOL.completeItemUse(attackItem, {}, {});\n          await new Promise(resolve => setTimeout(resolve, game.settings.get(\"midi-qol\", \"DebounceInterval\")))\n        }\n    }\n\n}\nreturn true;",
        "name": "Multiattack Automation",
        "img": "icons/skills/melee/blade-tips-triple-steel.webp",
        "type": "script",
        "scope": "global",
        "author": "STcmc1QZ0hx024Tl",
        "ownership": {
          "default": 3
        },
        "_id": null,
        "folder": null,
        "sort": 0,
        "flags": {},
        "_stats": {
          "systemId": null,
          "systemVersion": null,
          "coreVersion": null,
          "createdTime": null,
          "modifiedTime": null,
          "lastModifiedBy": null
        }
      }
    },
    "walledtemplates": {
      "wallsBlock": "globalDefault",
      "wallRestriction": "globalDefault"
    }
  },
  "_stats": {
    "systemId": "dnd5e",
    "systemVersion": "3.1.2",
    "coreVersion": "12.327",
    "createdTime": 1706708835115,
    "modifiedTime": 1715082521767,
    "lastModifiedBy": "STcmc1QZ0hx024Tl",
    "compendiumSource": null,
    "duplicateSource": null
  },
  "_id": "xxxbeu2Ip6YsuBtX",
  "sort": 4600000,
  "_key": "!items!xxxbeu2Ip6YsuBtX"
}
